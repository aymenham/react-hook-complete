{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhamidechi\\\\Desktop\\\\pr\\xE9sentation\\\\react-presentation\\\\src\\\\Components\\\\List\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useAxiosFetch } from \"../../hooks/useAxiosFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const {} = useAxiosFetch(\"\");\n  /*   const [cards, setCards] = useState<Card[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string>(\"\");\r\n  \r\n    const getData = async () => {\r\n      axios\r\n        .get(\"/character\")\r\n        .then((result) => {\r\n          setCards(result.data.results);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n  \r\n    useEffect(() => {\r\n      getData();\r\n    }, []); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cards.map(card => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"zlvgIAYr1uylPQUaaR/reM0enxU=\", false, function () {\n  return [useAxiosFetch];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useAxiosFetch","jsxDEV","_jsxDEV","List","_s","children","cards","map","card","name","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","_c","$RefreshReg$"],"sources":["C:/Users/mhamidechi/Desktop/prÃ©sentation/react-presentation/src/Components/List/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"../../axios\";\r\nimport { useAxiosFetch } from \"../../hooks/useAxiosFetch\";\r\n\r\ntype Card = {\r\n  id: number;\r\n  name: string;\r\n  image: string;\r\n};\r\nconst List = () => {\r\n\r\n  const {} = useAxiosFetch(\"\")\r\n/*   const [cards, setCards] = useState<Card[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  const getData = async () => {\r\n    axios\r\n      .get(\"/character\")\r\n      .then((result) => {\r\n        setCards(result.data.results);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []); */\r\n\r\n  return (\r\n    <div>\r\n      {cards.map((card) => {\r\n        return (\r\n          <div>\r\n            <div>{card.name}</div>\r\n            <img src={card.image} alt=\"\" />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"mappings":";;AAEA,SAASA,aAAa,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAAC,CAAC,GAAGJ,aAAa,CAAC,EAAE,CAAC;EAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACEE,OAAA;IAAAG,QAAA,EACGC,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAK;MACnB,oBACEN,OAAA;QAAAG,QAAA,gBACEH,OAAA;UAAAG,QAAA,EAAMG,IAAI,CAACC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eACtBX,OAAA;UAAKY,GAAG,EAAEN,IAAI,CAACO,KAAM;UAACC,GAAG,EAAC;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACT,EAAA,CAlCID,IAAI;EAAA,QAEGH,aAAa;AAAA;AAAAiB,EAAA,GAFpBd,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}