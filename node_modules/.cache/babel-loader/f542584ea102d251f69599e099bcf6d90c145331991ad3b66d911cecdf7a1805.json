{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhamidechi\\\\Desktop\\\\pr\\xE9sentation\\\\react-presentation\\\\src\\\\pages\\\\CmExercice.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CME = _ref => {\n  _s();\n  let {\n    titles\n  } = _ref;\n  const [favorites, setFavorites] = useState([]);\n  const TextList = useMemo(() => {\n    return titles.map((text, index) => ({\n      id: index,\n      text: text,\n      isFavorite: favorites.includes(index)\n    }));\n  }, [titles, favorites]);\n  const toggleFavorite = useCallback(index => {\n    setFavorites(prevFavorites => {\n      if (prevFavorites.includes(index)) {\n        return prevFavorites.filter(favIndex => favIndex !== index);\n      } else {\n        return [...prevFavorites, index];\n      }\n    });\n  }, [setFavorites]);\n  const favoriteCount = useMemo(() => {\n    return TextList.filter(image => image.isFavorite).length;\n  }, [TextList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total favorites: \", favoriteCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }, this), TextList.map((text, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleFavorite(index),\n        children: image.isFavorite ? 'Remove from favorites' : 'Add to favorites'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, image.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }, this);\n};\n_s(CME, \"OyGxseknreyh/diT4f2NHshnX6c=\");\n_c = CME;\nvar _c;\n$RefreshReg$(_c, \"CME\");","map":{"version":3,"names":["useCallback","useMemo","useState","jsxDEV","_jsxDEV","CME","_ref","_s","titles","favorites","setFavorites","TextList","map","text","index","id","isFavorite","includes","toggleFavorite","prevFavorites","filter","favIndex","favoriteCount","image","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mhamidechi/Desktop/prÃ©sentation/react-presentation/src/pages/CmExercice.tsx"],"sourcesContent":["import { useCallback, useMemo, useState } from \"react\";\r\n\r\n type Props =  {\r\n  titles : string []\r\n}\r\n\r\nexport const CME = ({titles} : Props) => {\r\n  const [favorites, setFavorites] = useState<number []>([]);\r\n\r\n  const TextList = useMemo(() => {\r\n    return titles.map((text, index) => ({\r\n      id: index,\r\n      text: text,\r\n      isFavorite: favorites.includes(index)\r\n    }));\r\n  }, [titles, favorites]);\r\n\r\n  const toggleFavorite = useCallback((index:number) => {\r\n    setFavorites(prevFavorites => {\r\n      if (prevFavorites.includes(index)) {\r\n        return prevFavorites.filter(favIndex => favIndex !== index);\r\n      } else {\r\n        return [...prevFavorites, index];\r\n      }\r\n    });\r\n  }, [setFavorites]);\r\n\r\n  const favoriteCount = useMemo(() => {\r\n    return TextList.filter(image => image.isFavorite).length;\r\n  }, [TextList]);\r\n\r\n  return  <div>\r\n  <p>Total favorites: {favoriteCount}</p>\r\n  {TextList.map((text, index) => (\r\n    <div key={image.id}>\r\n      <h1>{text}</h1>\r\n      <button onClick={() => toggleFavorite(index)}>\r\n        {image.isFavorite ? 'Remove from favorites' : 'Add to favorites'}\r\n      </button>\r\n    </div>\r\n  ))}\r\n</div>;\r\n};\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvD,OAAO,MAAMC,GAAG,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAACC;EAAc,CAAC,GAAAF,IAAA;EAClC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAY,EAAE,CAAC;EAEzD,MAAMS,QAAQ,GAAGV,OAAO,CAAC,MAAM;IAC7B,OAAOO,MAAM,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;MAClCC,EAAE,EAAED,KAAK;MACTD,IAAI,EAAEA,IAAI;MACVG,UAAU,EAAEP,SAAS,CAACQ,QAAQ,CAACH,KAAK;IACtC,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACN,MAAM,EAAEC,SAAS,CAAC,CAAC;EAEvB,MAAMS,cAAc,GAAGlB,WAAW,CAAEc,KAAY,IAAK;IACnDJ,YAAY,CAACS,aAAa,IAAI;MAC5B,IAAIA,aAAa,CAACF,QAAQ,CAACH,KAAK,CAAC,EAAE;QACjC,OAAOK,aAAa,CAACC,MAAM,CAACC,QAAQ,IAAIA,QAAQ,KAAKP,KAAK,CAAC;MAC7D,CAAC,MAAM;QACL,OAAO,CAAC,GAAGK,aAAa,EAAEL,KAAK,CAAC;MAClC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,MAAMY,aAAa,GAAGrB,OAAO,CAAC,MAAM;IAClC,OAAOU,QAAQ,CAACS,MAAM,CAACG,KAAK,IAAIA,KAAK,CAACP,UAAU,CAAC,CAACQ,MAAM;EAC1D,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;EAEd,oBAAQP,OAAA;IAAAqB,QAAA,gBACRrB,OAAA;MAAAqB,QAAA,GAAG,mBAAiB,EAACH,aAAa;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACtClB,QAAQ,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBV,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAKZ;MAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACfzB,OAAA;QAAQ0B,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAACJ,KAAK,CAAE;QAAAW,QAAA,EAC1CF,KAAK,CAACP,UAAU,GAAG,uBAAuB,GAAG;MAAkB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzD;IAAA,GAJDN,KAAK,CAACR,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAMnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AACN,CAAC;AAACtB,EAAA,CApCWF,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}