{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhamidechi\\\\Desktop\\\\pr\\xE9sentation\\\\react-presentation\\\\src\\\\pages\\\\CallbackPage.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CallBackPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"callback\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"useCallback is used to memoize a function so that it is only recreated when the dependencies change. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 39\n      }, this), \" This is useful when passing functions as props to child components. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 49\n      }, this), \"By using useCallback, the function is only recreated when needed and not on every render.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), \"const [age, setAge] = useState(25) const [salary, setSalary] = useState(50000) const incrementAge = useCallback(() => \", setAge(age + 1), \", [age]) const incrementSalary = useCallback(() => \", setSalary(salary + 1000), \", [salary]) return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Count, {\n        text: \"Age\",\n        count: age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: incrementAge,\n        children: \"Increment Age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Count, {\n        text: \"Salary\",\n        count: salary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: incrementSalary,\n        children: \"Increment Salary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n};\n_c = CallBackPage;\nvar _c;\n$RefreshReg$(_c, \"CallBackPage\");","map":{"version":3,"names":["CallBackPage","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","setAge","age","setSalary","salary","Title","Count","text","count","Button","handleClick","incrementAge","incrementSalary","_c","$RefreshReg$"],"sources":["C:/Users/mhamidechi/Desktop/prÃ©sentation/react-presentation/src/pages/CallbackPage.tsx"],"sourcesContent":["export const CallBackPage = () => {\r\n  return (\r\n    <div className=\"callback\">\r\n      <h2>\r\n        useCallback is used to memoize a function so that it is only recreated\r\n        when the dependencies change. <br /> This is useful when passing\r\n        functions as props to child components. <br />\r\n        By using useCallback, the function is only recreated when needed and not\r\n        on every render.\r\n      </h2>\r\n\r\n      const [age, setAge] = useState(25)\r\n\tconst [salary, setSalary] = useState(50000)\r\n\r\n\tconst incrementAge = useCallback(() => {\r\n\t\tsetAge(age + 1)\r\n\t}, [age])\r\n\r\n\tconst incrementSalary = useCallback(() => {\r\n\t\tsetSalary(salary + 1000)\r\n\t}, [salary])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Title />\r\n\t\t\t<Count text=\"Age\" count={age} />\r\n\t\t\t<Button handleClick={incrementAge}>Increment Age</Button>\r\n\t\t\t<Count text=\"Salary\" count={salary} />\r\n\t\t\t<Button handleClick={incrementSalary}>Increment Salary</Button>\r\n\t\t</div>\r\n\t)\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAO,MAAMA,YAAY,GAAGA,CAAA,KAAM;EAChC,oBACEC,OAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBF,OAAA;MAAAE,QAAA,GAAI,uGAE4B,eAAAF,OAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,yEACI,eAAAN,OAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,6FAGhD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,0HAK6B,EACtCC,MAAM,CAACC,GAAG,GAAG,CAAC,CAAC,EACf,qDAEyC,EACzCC,SAAS,CAACC,MAAM,GAAG,IAAI,CAAC,EACxB,sBAGA,eAAAV,OAAA;MAAAE,QAAA,gBACCF,OAAA,CAACW,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACTN,OAAA,CAACY,KAAK;QAACC,IAAI,EAAC,KAAK;QAACC,KAAK,EAAEN;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAChCN,OAAA,CAACe,MAAM;QAACC,WAAW,EAAEC,YAAa;QAAAf,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACzDN,OAAA,CAACY,KAAK;QAACC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAEJ;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACtCN,OAAA,CAACe,MAAM;QAACC,WAAW,EAAEE,eAAgB;QAAAhB,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1D,KAEJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAEV,CAAC;AAACa,EAAA,GAjCWpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}