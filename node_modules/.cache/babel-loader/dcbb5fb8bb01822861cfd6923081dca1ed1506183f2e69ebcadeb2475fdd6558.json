{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhamidechi\\\\Desktop\\\\pr\\xE9sentation\\\\react-presentation\\\\src\\\\pages\\\\CallbackPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"../Components/CallBack/Button\";\nimport Count from \"../Components/CallBack/Count\";\nimport Title from \"../Components/CallBack/Title\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CallBackPage = () => {\n  _s();\n  const [age, setAge] = useState(10);\n  const [salary, setSalary] = useState(500);\n  const incrementAge = () => {\n    setAge(age + 1);\n  };\n  const incrementSalary = () => {\n    setSalary(salary + 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"callback\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"useCallback is used to memoize a function so that it is only recreated when the dependencies change. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 39\n      }, this), \" This is useful when passing functions as props to child components. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 49\n      }, this), \"By using useCallback, the function is only recreated when needed and not on every render.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Count, {\n      text: \"Age\",\n      count: age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: incrementAge,\n      children: \"Increment Age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Count, {\n      text: \"Salary\",\n      count: salary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: incrementSalary,\n      children: \"Increment Salary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CallBackPage, \"GySI+6wsi0kyBt/SXiLeK3MZAeM=\");\n_c = CallBackPage;\nvar _c;\n$RefreshReg$(_c, \"CallBackPage\");","map":{"version":3,"names":["useState","Button","Count","Title","jsxDEV","_jsxDEV","CallBackPage","_s","age","setAge","salary","setSalary","incrementAge","incrementSalary","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","count","handleClick","_c","$RefreshReg$"],"sources":["C:/Users/mhamidechi/Desktop/prÃ©sentation/react-presentation/src/pages/CallbackPage.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport Button from \"../Components/CallBack/Button\";\r\nimport Count from \"../Components/CallBack/Count\";\r\nimport Title from \"../Components/CallBack/Title\";\r\n\r\nexport const CallBackPage = () => {\r\n  const [age, setAge] = useState(10);\r\n  const [salary, setSalary] = useState(500);\r\n\r\n  const incrementAge = () => {\r\n    setAge(age + 1);\r\n  }\r\n\r\n  const incrementSalary = () => {\r\n    setSalary(salary + 500);\r\n  }\r\n\r\n  return (\r\n    <div className=\"callback\">\r\n      <h2>\r\n        useCallback is used to memoize a function so that it is only recreated\r\n        when the dependencies change. <br /> This is useful when passing\r\n        functions as props to child components. <br />\r\n        By using useCallback, the function is only recreated when needed and not\r\n        on every render.\r\n      </h2>\r\n      <Title />\r\n      <Count text=\"Age\" count={age} />\r\n      <Button handleClick={incrementAge}>Increment Age</Button>\r\n      <Count text=\"Salary\" count={salary} />\r\n      <Button handleClick={incrementSalary}>Increment Salary</Button>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAAsBA,QAAQ,QAAQ,OAAO;AAC7C,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,KAAK,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC;EAEzC,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBH,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC;EACjB,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5BF,SAAS,CAACD,MAAM,GAAG,GAAG,CAAC;EACzB,CAAC;EAED,oBACEL,OAAA;IAAKS,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBV,OAAA;MAAAU,QAAA,GAAI,uGAE4B,eAAAV,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,yEACI,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,6FAGhD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACLd,OAAA,CAACF,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACTd,OAAA,CAACH,KAAK;MAACkB,IAAI,EAAC,KAAK;MAACC,KAAK,EAAEb;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChCd,OAAA,CAACJ,MAAM;MAACqB,WAAW,EAAEV,YAAa;MAAAG,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACzDd,OAAA,CAACH,KAAK;MAACkB,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAEX;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtCd,OAAA,CAACJ,MAAM;MAACqB,WAAW,EAAET,eAAgB;MAAAE,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3D;AAEV,CAAC;AAACZ,EAAA,CA5BWD,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}